<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | Sean Mountcastle]]></title>
  <link href="http://seanmountcastle.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://seanmountcastle.com/"/>
  <updated>2013-09-01T22:16:59-04:00</updated>
  <id>http://seanmountcastle.com/</id>
  <author>
    <name><![CDATA[Sean Mountcastle]]></name>
    <email><![CDATA[smountcastle@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TopCoder Single Round Match]]></title>
    <link href="http://seanmountcastle.com/blog/2006/12/20/topcoder-single-round-match/"/>
    <updated>2006-12-20T23:04:04-05:00</updated>
    <id>http://seanmountcastle.com/blog/2006/12/20/topcoder-single-round-match</id>
    <content type="html"><![CDATA[<p>Last night I participated in a &ldquo;code fest&rdquo; sponsored by my employer. It
was great fun and the code fest was powered by
<a href="http://www.topcoder.com">TopCoder</a>. This was my first time
participating in any sort of coding competition and while I didn&rsquo;t make
the top three, I did place in the top ten. I&rsquo;m definitely looking
forward to the next company sponsored event in February. For those of
you not familiar with TopCoder, they basically provide a Java
application/applet called the Competition Arena. Once you login to the
arena, you can then register for a Single Round Match (SRM, in TopCoder
parlance), but only during the registration window (which appears to be
two hours prior to the event). Once the event begins you have 75 minutes
to solve problems of increasing difficulty. Each problem set is assigned
a certain number of points (usually 250, 500 and 1000). You are judged
both on the correctness of your program as well as the time it took you
to develop and test it. Since you must develop, compile and test your
code in TopCoder&rsquo;s arena Java app you can only write your solution in
C++, Java, C#, or VisualBasic. I wish they offered Ruby as an option
(or even Python), but at this time you&rsquo;re stuck with those four choices.
You are allowed to choose your programming language at the problem set
level (i.e. you don&rsquo;t need to stick with the same language for all
three). Since the majority of my experience in the past ten years has
been with Java I selected that for all three of the problem sets. In
retrospect, I might&rsquo;ve fared better had I chosen C++ as that is what
I&rsquo;ve been using almost exclusively at work these past three months. I
also need to manage my time better as I ran out of time just before I
was going to submit my solution to the 1000 point problem&mdash;I believe
that had I finished in time, I would&rsquo;ve placed in the top three (I guess
we&rsquo;ll see when I participate in February). Once the content ends, you&rsquo;re
able to look at the solutions from the other participants and can
challenge their solutions if you believe you&rsquo;ve found a bug. If your
challenge succeeds, you earn points and the person challenged loses all
of the points for that problem, but if your challenge fails, you&rsquo;ll lose
points and the person challenged will gain points. There were a few
successful and unsuccessful challenges during the competition. Looking
through people&rsquo;s code it was clear that the folks who had participated
previously didn&rsquo;t bother indenting their code properly or ensuring it
was clear&mdash;they focused on getting it working in the shortest time
possible. I made the newbie mistake of properly indenting my code and
even writing psudocode comments as an outline prior to writing the real
code (next time I&rsquo;ll do this on paper if necessary). I also was hampered
slightly by the Arena editor as it uses the MS Windows keybindings even
on the Mac! Thus CTRL+C is copy instead of CMD+C &mdash; I kept hitting the
Apple shortcuts instead of their Windows counterparts and this slowed me
down as well. My colleague suggested just keeping Emacs open and copy
and paste as necessary into the Arena editor. Unfortunately, I cannot
post the problem sets here as they are copyrighted by TopCoder and you
must have permission to republish them. But if you go to the TopCoder
site, you can see many example problems. If you&rsquo;re interested in
petitioning TopCoder to offer Ruby as an alternative language for
competitions, I urge you to <a href="mailto:service@topcoder.com">email them</a>,
as I have. <strong>Update 2006-12-21</strong>: I received the following response from
TopCoder and have asked them to add Ruby as an option for &ldquo;Marathon
Matches&rdquo;</p>

<blockquote><p>We do not allow interpreted languages like Python or Ruby in our
algorithm events because their execution speeds makes them
non-competitive compared to the other languages.Â We revisit this from
time to time, but our tests have shown that the execution speed makes
writing problems that keep all languages on the same approximate
playing field impossible. We do offer Python as a fully supported
language choice in our Marathon Match events, where we can relax the
constraints because of the non time-critical nature of the event.Â You
can find more information about Marathon events on our web site under
â€œMarathon Matchesâ€?</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSCON: Sessions Day One]]></title>
    <link href="http://seanmountcastle.com/blog/2006/07/27/oscon-sessions-day-one/"/>
    <updated>2006-07-27T20:34:00-04:00</updated>
    <id>http://seanmountcastle.com/blog/2006/07/27/oscon-sessions-day-one</id>
    <content type="html"><![CDATA[<p>Below are my notes from the first day of sessions here at
<a href="http://conferences.oreillynet.com/os2006/">OSCON</a>. The talks I attended
were:</p>

<ul>
<li>Using Ruby on Rails to Build a Massive Multiplayer Game</li>
<li>Easy AI with Python</li>
<li>Driving Rails Deep into the Back Office</li>
<li>Streamlined</li>
<li>Ruby for Java Programmers</li>
<li>Coding Wizard, Savvy Trader</li>
</ul>


<p>In the morning, I attended <a href="http://www.michaelbuffington.com/">Michael
Buffingtonâ€™s</a> talk on <a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/8390">â€œUsing
Ruby on Rails to Build a Massive Multiplayer
Gameâ€?</a>.
He gave a nice overview of the development of <a href="http://llor.nu">unroll</a>
discussing isometric art, game design and briefly mentioning
Ajax/JavaScript/script.aculo.us. Hopefully his slides will be available
online shortly. The code for unroll can be downloaded
<a href="http://dev.llor.nu">here</a>. At 11:35am, I was torn between <a href="http://clarkware.com/cgi/blosxom">Mike
Clarkâ€™s</a> <a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/8396">Deploying Rails Apps with
Capistrano</a>
and Raymond Hettingerâ€™s <a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/9577">Easy AI with
Python</a>.
Since Iâ€™ve already deployed a couple of Rails apps using Capistrano, I
decided to sneak into the Python camp (I ended up sitting right in front
of Guido). I found the presentation quite interesting and will be
looking into similar libraries for Ruby. Raymond covered the following
topics: neural networks for datamining, solving the mastermind game,
solving sudoku, a Bayesian classifer and, finally, a generic puzzle
solver. Though the slides do not appear to be online yet, the Python
code is available
<a href="http://aspn.activestate.com/ASPN/Cookbook/Python?author=178123">here</a>.
After lunch I attended <a href="http://www.jroller.com/page/obie">Obie
Fernandezâ€™s</a> <a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/8674">Driving Rails Deep
into the Back
Office</a>.
Obie discussed the PCS project for Barclays Bank in Willmington, DE that
Thoughtworks was involved in. He discussed the various ways in which to
get new technology into the very conservative back office of companies,
such as: Trojan horse (sneaking it in), the race (two parallel
development teams using different technologies), the pilot project, the
rescue (for a failed/failing project) and finally undercutting (but he
cautioned that this de-values the work youâ€™re doing). The three key
points of his talk were:</p>

<ol>
<li>Optimize and raise your level of abstraction (by creating custom
DSLs and capturing the requirements in Ruby)</li>
<li>Rails really breathes life into extreme programming (they had one
week iterations on their project)</li>
<li>Donâ€™t sweat performance and scaling (they had their custom DSL
generate SQL directly instead of Ruby to keep the performance up â€“
so you canâ€™t completely ignore performance issues, but theyâ€™re
usually not as bad as you think)</li>
</ol>


<p><a href="http://www.relevancellc.com">Stuart Halloway</a> demoed the
<a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/9535">Streamlined</a>
generator for Ruby on Rails â€˜backendâ€™ admin interfaces. Stuart
described Streamlined as:</p>

<ol>
<li>Product ready backend scaffolding</li>
<li>Generic enterprise CRUD</li>
<li>The simplicity of ActiveRecord brought to views and controllers</li>
</ol>


<p>Heâ€™s not going to put the material present online since it is all
basically available via the <a href="http://www.streamlinedframework.org/">Streamlined
blog</a>. Ugo Cei gave a talk
entitled <a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/8636">Ruby for Java
Programmers</a>
â€“ which confused many folks who thought it was an introduction to Ruby
for those coming from a Java programming background â€“ instead it
covered how to call Ruby from Java and how to call Java from Ruby. All
of the material is covered in his slides, which are available
<a href="http://www.sourcesense.com/transfer/ruby_for_java_programmers.pdf">here</a>.
At the end of his talk he demoâ€™ed Rails running inside of JRuby which
was pretty neat (though very slow and a bit buggy â€“ sometimes
controllers wouldnâ€™t respond). Since Iâ€™ve already written a C
extension for Ruby, I decided to attend a different kind of talk,
<a href="http://conferences.oreillynet.com/cs/os2006/view/e_sess/8755">Coding Wizard, Savvy
Trader</a> by
Kartik Subbarao of HP. It was a whirlwind talk covering stocks and
options trading and how to get access to financial information as well
as how to process it using Perl, GreaseMonkey, etc. When the slides are
posted, Iâ€™ll link back to them but here are several of the sites which
were recommended:</p>

<ul>
<li><a href="http://finance.yahoo.com">Yahoo! Finance</a></li>
<li><a href="http://www.stockcharts.com/education">StockCharts Learning Center</a></li>
<li><a href="http://www.cboe.com/LearnCenter">Chicago Board of Exchange Learning
Center</a></li>
<li><a href="http://www.optionsxpress.com">OptionsXpress</a></li>
<li><a href="http://www.wealthlab.com">WealthLab</a></li>
<li><a href="http://www.elitetrader.com">EliteTrader</a></li>
<li><a href="http://www.opentick.com">OpenTick</a></li>
<li><a href="http://www.stocktickr.com">StockTickr</a></li>
<li><a href="http://www.socialpicks.com">SocialPicks</a></li>
<li><a href="http://www.marketocracy.com">Marketocracy</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
